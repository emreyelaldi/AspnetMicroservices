Bir veri, veri satırı olarak değil de, bu satırı oluşturacak event’lerin toplamı olarak ifade edilirse bize Eventual Consistency(Nihai Tutarlılık) bir yapı sunabilir.

https://www.gencayyildiz.com/blog/event-sourcing-nedir-haydi-gelin-hep-beraber-inceleyelim/

MEDIATOR PATTERN (Uçaklar - kule)
Neden böyle bir tasarıma ihtiyaç duyarız? Hangi olası soruna çare arıyoruz?
1- Nesnelerin birbiriyle doğrudan iletişime girmesi durumunda bir nesnenin iletişime girdiği diğer nesneye bağlı olması(referans etmesi vs.) gereksinimini getirir. Bu sürecin zincirleme devam etmesi, tightly-coupled(sıkı-bağlı) bir tasarımın ortaya çıkması gibi istenmeyen fakat kaçınılmaz sonuçların doğmasına neden olacaktır. 

Mediator Pattern bu problemi nasıl çözmeyi öneriyor?
1- Mediator Pattern yukarıda özetlemeye çalıştığım duruma çözüm olarak iletişimin merkezine bir aracı koyar ve tüm iletişim bunun üzerinden gerçekleşir. Böylece nesneler arası loosely-coupled(gevşek-bağlı) bir bağın kullanılmasına imkan tanır. Nesneler iletişim kurmak istediği diğer nesnelerin referanslarını barındırmaz, doğrudan bağlantı kurmaz, aracıyı kullanarak tüm iletişimlerini bu aracı katman üzerinden sağlarlar.

2- Temel amaç sistemdeki nesneler diğer nesnelere doğrudan bağlı olmak yerine bir aracı nesneye bağlı olsunlar ve iletişim bunun üzerinden sağlansın düşüncesidir.

ÖRNEK (ChatRoom)
https://github.com/enginunal/MediatorPatternChatroomSample